1
00:00:00,000 --> 00:00:03,720
Imagine yourself as an account manager at Parch and Posey.

2
00:00:03,720 --> 00:00:05,580
You're about to head out to visit one of

3
00:00:05,580 --> 00:00:08,189
your most important customers and you want to show up prepared,

4
00:00:08,189 --> 00:00:13,439
which means making sure that you are up to speed on all of their recent purchases.

5
00:00:13,439 --> 00:00:15,539
You can use a WHERE clause to generate a list of

6
00:00:15,539 --> 00:00:19,535
all purchases made by that specific customer.

7
00:00:19,535 --> 00:00:22,469
The WHERE clause allows you to filter a set of results based on

8
00:00:22,469 --> 00:00:26,469
specific criteria as you would with Excel's filter capability.

9
00:00:26,469 --> 00:00:30,754
Filtering with WHERE allows you to answer much more meaningful questions.

10
00:00:30,754 --> 00:00:33,494
You'll end up using it in most of the queries that you write.

11
00:00:33,494 --> 00:00:37,559
The WHERE clause goes after FROM but before ORDER BY or LIMIT.

12
00:00:37,560 --> 00:00:39,880
As in previous queries,

13
00:00:39,880 --> 00:00:43,780
the clauses must be in the right order or the query will return an error.

14
00:00:43,780 --> 00:00:45,575
As an account manager,

15
00:00:45,575 --> 00:00:48,925
we'll write a query to show only orders from our top customer,

16
00:00:48,924 --> 00:00:53,189
which is represented here by account ID 4251.

17
00:00:53,189 --> 00:00:59,244
We'll write this simple equation where account ID is equal to 4251.

18
00:00:59,244 --> 00:01:02,379
This will produce a result set that includes all rows for which

19
00:01:02,380 --> 00:01:07,000
the value in the account ID column is equal to 4251.

20
00:01:07,000 --> 00:01:11,840
When using SQL entire rows of data are preserved intact.

21
00:01:11,840 --> 00:01:15,880
If you write a WHERE clause that filters based on values in one column as we have done

22
00:01:15,879 --> 00:01:21,295
here you'll limit the results in all columns to rows that satisfy the condition.

23
00:01:21,295 --> 00:01:23,829
The idea is that each row is one data point or

24
00:01:23,829 --> 00:01:28,795
observation and all the information contained in that row belongs together.

25
00:01:28,795 --> 00:01:32,409
All of the information in one row is about one order of paper.

